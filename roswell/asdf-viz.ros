#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -L sbcl-bin dynamic-space-size=4000 -m asdf-viz -Q -- $0 "$@"
|#
(ql:quickload :asdf-viz :silent t)
(in-package :asdf-viz)

(defun main (&rest argv)
  (declare (ignorable argv))
  (match argv
    (nil
     (format *error-output* "
Simple  usage: $ asdf-viz [output.png] [system-name]...
Complex usage: $ asdf-viz [[-e|--exclude SYSTEM]...] [-l|--license] PNG-PATH [SYSTEM...]

Example:
  asdf-viz asdf-viz.png asdf-viz               --- basic usage
  asdf-viz -l asdf-viz.png asdf-viz            --- display the license on each node
  asdf-viz -e iterate -l asdf-viz.png asdf-viz --- excludes iterate from the output  ~%")
     1)
    ((list* (or "-e" "--exclude") excluded rest)
     (let ((*excluded* (cons excluded *excluded*)))
       (apply #'main rest)))
    ((list* (or "-l" "--license") rest)
     (let ((*license* t))
       (apply #'main rest)))
    ((list* png systems)
     (dolist (s systems)
       (handler-case
           (ql:quickload s :silent t)
         (quicklisp-client:system-not-found ()
           (format *error-output* "System ~a not located by quicklisp, skipping" s))
         (error (c)
           (format *error-output* "~a occured during quickloading system ~a, skipping"
                   (type-of c) s))))
     (visualize-asdf-hierarchy
      png
      (mapcar (lambda (s)
                (asdf:find-system (read-from-string s)))
              systems)
      'dependson))))
